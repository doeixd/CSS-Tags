---
/**
 * Header Component
 *
 * A flexible, full-width header for documentation sites with support for:
 * - Logo or site title
 * - Integrated search with keyboard shortcuts
 * - Icon links (GitHub, Discord, Twitter, LinkedIn, custom)
 * - Optional version and language dropdowns
 * - Theme toggle
 * - Custom children via slots (desktop-only, mobile-only, or both)
 *
 * SLOTS:
 * - Default slot: Content visible on both desktop and mobile
 * - `desktop` slot: Content visible only on desktop (>768px)
 * - `mobile` slot: Content visible only on mobile (<=768px)
 *
 * EXAMPLES:
 *
 * Basic usage:
 * <Header currentPath={currentPath} />
 *
 * With logo:
 * <Header logo={{ src: "/logo.svg", alt: "Site Logo" }} />
 *
 * With custom children (always visible):
 * <Header currentPath={currentPath}>
 *   <button>Custom CTA</button>
 * </Header>
 *
 * With desktop-only content:
 * <Header currentPath={currentPath}>
 *   <Fragment slot="desktop">
 *     <a href="/pricing">Pricing</a>
 *     <a href="/docs">Documentation</a>
 *   </Fragment>
 * </Header>
 *
 * With mobile-only content:
 * <Header currentPath={currentPath}>
 *   <Fragment slot="mobile">
 *     <button aria-label="Menu">â˜°</button>
 *   </Fragment>
 * </Header>
 *
 * With both:
 * <Header currentPath={currentPath}>
 *   <span>v2.0</span>
 *   <Fragment slot="desktop">
 *     <a href="/enterprise">Enterprise</a>
 *   </Fragment>
 *   <Fragment slot="mobile">
 *     <button>Menu</button>
 *   </Fragment>
 * </Header>
 */

import ThemeToggle from './ThemeToggle.astro';
import Search from './Search.astro';

interface IconLink {
  href: string;
  icon: 'github' | 'discord' | 'twitter' | 'linkedin' | 'custom';
  label: string;
  customIcon?: string; // SVG path data for custom icons
}

interface VersionOption {
  version: string;
  label?: string;
  href: string;
}

interface LanguageOption {
  code: string;
  label: string;
  href: string;
}

interface Props {
  currentPath?: string;
  logo?: { src: string; alt: string; href?: string } | null;
  siteTitle?: string;
  siteTitleHref?: string;
  showSearch?: boolean;
  iconLinks?: IconLink[];
  versionDropdown?: {
    current: string;
    versions: VersionOption[];
  } | null;
  languageDropdown?: {
    current: string;
    languages: LanguageOption[];
  } | null;
}

const {
  currentPath = '/',
  logo = null,
  siteTitle = 'CSS Tags',
  siteTitleHref = '/',
  showSearch = true,
  iconLinks = [],
  versionDropdown = null,
  languageDropdown = null,
} = Astro.props;

// Icon SVG paths
const icons = {
  github: 'M12 0C5.37 0 0 5.37 0 12c0 5.31 3.435 9.795 8.205 11.385.6.105.825-.255.825-.57 0-.285-.015-1.23-.015-2.235-3.015.555-3.795-.735-4.035-1.41-.135-.345-.72-1.41-1.23-1.695-.42-.225-1.02-.78-.015-.795.945-.015 1.62.87 1.845 1.23 1.08 1.815 2.805 1.305 3.495.99.105-.78.42-1.305.765-1.605-2.67-.3-5.46-1.335-5.46-5.925 0-1.305.465-2.385 1.23-3.225-.12-.3-.54-1.53.12-3.18 0 0 1.005-.315 3.3 1.23.96-.27 1.98-.405 3-.405s2.04.135 3 .405c2.295-1.56 3.3-1.23 3.3-1.23.66 1.65.24 2.88.12 3.18.765.84 1.23 1.905 1.23 3.225 0 4.605-2.805 5.625-5.475 5.925.435.375.81 1.095.81 2.22 0 1.605-.015 2.895-.015 3.3 0 .315.225.69.825.57A12.02 12.02 0 0024 12c0-6.63-5.37-12-12-12z',
  discord: 'M20.317 4.37a19.791 19.791 0 00-4.885-1.515.074.074 0 00-.079.037c-.21.375-.444.864-.608 1.25a18.27 18.27 0 00-5.487 0 12.64 12.64 0 00-.617-1.25.077.077 0 00-.079-.037A19.736 19.736 0 003.677 4.37a.07.07 0 00-.032.027C.533 9.046-.32 13.58.099 18.057a.082.082 0 00.031.057 19.9 19.9 0 005.993 3.03.078.078 0 00.084-.028c.462-.63.874-1.295 1.226-1.994a.076.076 0 00-.041-.106 13.107 13.107 0 01-1.872-.892.077.077 0 01-.008-.128 10.2 10.2 0 00.372-.292.074.074 0 01.077-.01c3.928 1.793 8.18 1.793 12.062 0a.074.074 0 01.078.01c.12.098.246.198.373.292a.077.077 0 01-.006.127 12.299 12.299 0 01-1.873.892.077.077 0 00-.041.107c.36.698.772 1.362 1.225 1.993a.076.076 0 00.084.028 19.839 19.839 0 006.002-3.03.077.077 0 00.032-.054c.5-5.177-.838-9.674-3.549-13.66a.061.061 0 00-.031-.03zM8.02 15.33c-1.183 0-2.157-1.085-2.157-2.419 0-1.333.956-2.419 2.157-2.419 1.21 0 2.176 1.096 2.157 2.42 0 1.333-.956 2.418-2.157 2.418zm7.975 0c-1.183 0-2.157-1.085-2.157-2.419 0-1.333.955-2.419 2.157-2.419 1.21 0 2.176 1.096 2.157 2.42 0 1.333-.946 2.418-2.157 2.418z',
  twitter: 'M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z',
  linkedin: 'M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z',
};
---

<header class="site-header" transition:persist="site-header">
  <div class="header-container">
    <!-- Left: Logo / Site Title -->
    <div class="header-left">
      {logo ? (
        <a href={logo.href || siteTitleHref} class="header-logo-link">
          <img src={logo.src} alt={logo.alt} class="header-logo" />
        </a>
      ) : (
        <a href={siteTitleHref} class="header-site-title">
          {siteTitle}
        </a>
      )}
    </div>

    <!-- Center: Search -->
    {showSearch && (
      <div class="header-search">
        <Search id="header-search" variant="header" />
      </div>
    )}

    <!-- Right: Version, Language, Icons, Theme -->
    <div class="header-right">
      {versionDropdown && (
        <div class="header-dropdown version-dropdown">
          <button class="dropdown-button" aria-label="Select version">
            <span class="dropdown-label">v{versionDropdown.current}</span>
            <svg class="dropdown-icon" width="12" height="12" viewBox="0 0 12 12" fill="none" aria-hidden="true">
              <path d="M2 4L6 8L10 4" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
          </button>
          <div class="dropdown-menu">
            {versionDropdown.versions.map((v) => (
              <a
                href={v.href}
                class={`dropdown-item ${v.version === versionDropdown.current ? 'active' : ''}`}
              >
                {v.label || v.version}
              </a>
            ))}
          </div>
        </div>
      )}

      {languageDropdown && (
        <div class="header-dropdown language-dropdown">
          <button class="dropdown-button" aria-label="Select language">
            <span class="dropdown-label">{languageDropdown.current}</span>
            <svg class="dropdown-icon" width="12" height="12" viewBox="0 0 12 12" fill="none" aria-hidden="true">
              <path d="M2 4L6 8L10 4" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
          </button>
          <div class="dropdown-menu">
            {languageDropdown.languages.map((lang) => (
              <a
                href={lang.href}
                class={`dropdown-item ${lang.code === languageDropdown.current ? 'active' : ''}`}
              >
                {lang.label}
              </a>
            ))}
          </div>
        </div>
      )}

      <div class="header-icon-links">
        {iconLinks.map((link) => (
          <a
            href={link.href}
            class="header-icon-link"
            aria-label={link.label}
            target={link.href.startsWith('http') ? '_blank' : undefined}
            rel={link.href.startsWith('http') ? 'noopener noreferrer' : undefined}
          >
            <svg class="icon" width="20" height="20" viewBox="0 0 24 24" fill="currentColor" aria-hidden="true">
              <path d={link.icon === 'custom' && link.customIcon ? link.customIcon : icons[link.icon]} />
            </svg>
          </a>
        ))}
      </div>

      <!-- Desktop-only slot -->
      <div class="header-children-desktop">
        <slot name="desktop" />
      </div>

      <!-- Mobile-only slot -->
      <div class="header-children-mobile">
        <slot name="mobile" />
      </div>

      <!-- Default slot (visible on both) -->
      <div class="header-children-default">
        <slot />
      </div>

      <ThemeToggle />
    </div>
  </div>
</header>

<style>
  .site-header {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    height: var(--header-height);
    background: var(--header-bg);
    border-bottom: var(--header-border);
    z-index: var(--header-z-index);
    transition: background var(--transition-normal), border-color var(--transition-normal);
  }

  .header-container {
    display: flex;
    align-items: center;
    justify-content: space-between;
    height: 100%;
    padding: 0 var(--header-padding-x);
    max-width: var(--header-max-width, 100%);
    margin: 0 auto;
    gap: var(--space-lg);
  }

  /* Left: Logo / Site Title */
  .header-left {
    display: flex;
    align-items: center;
    flex-shrink: 0;
  }

  .header-logo-link {
    display: flex;
    align-items: center;
    text-decoration: none;
  }

  .header-logo {
    height: var(--header-logo-height, 2rem);
    width: auto;
  }

  .header-site-title {
    font-size: var(--font-size-lg);
    font-weight: var(--font-weight-bold);
    color: var(--text-primary);
    text-decoration: none;
    transition: color var(--transition-fast);
  }

  .header-site-title:hover {
    color: var(--accent);
  }

  /* Center: Search */
  .header-search {
    flex: 1;
    max-width: 600px;
    display: flex;
    align-items: center;
  }

  #header-search {
    width: 100%;
  }

  /* Right: Actions */
  .header-right {
    display: flex;
    align-items: center;
    gap: var(--space-sm);
    flex-shrink: 0;
  }

  /* Dropdowns */
  .header-dropdown {
    position: relative;
  }

  .dropdown-button {
    display: flex;
    align-items: center;
    gap: var(--space-xs);
    padding: var(--space-xs) var(--space-sm);
    background: transparent;
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius-md);
    color: var(--text-primary);
    font-size: var(--font-size-sm);
    font-weight: var(--font-weight-medium);
    cursor: pointer;
    transition: all var(--transition-fast);
  }

  .dropdown-button:hover {
    background: var(--bg-hover);
    border-color: var(--accent);
  }

  .dropdown-icon {
    transition: transform var(--transition-fast);
  }

  .header-dropdown.open .dropdown-icon {
    transform: rotate(180deg);
  }

  .dropdown-menu {
    position: absolute;
    top: calc(100% + var(--space-xs));
    right: 0;
    min-width: 150px;
    background: var(--bg-primary);
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius-md);
    box-shadow: var(--shadow-md);
    opacity: 0;
    visibility: hidden;
    transform: translateY(-8px);
    transition: all var(--transition-fast);
    overflow: hidden;
    z-index: 10;
  }

  .header-dropdown.open .dropdown-menu {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
  }

  .dropdown-item {
    display: block;
    padding: var(--space-sm) var(--space-md);
    color: var(--text-primary);
    text-decoration: none;
    font-size: var(--font-size-sm);
    transition: background var(--transition-fast);
  }

  .dropdown-item:hover {
    background: var(--bg-hover);
  }

  .dropdown-item.active {
    background: var(--accent-light);
    color: var(--accent);
    font-weight: var(--font-weight-semibold);
  }

  /* Icon Links */
  .header-icon-links {
    display: flex;
    align-items: center;
    gap: var(--space-xs);
  }

  .header-icon-link {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 36px;
    height: 36px;
    color: var(--text-secondary);
    text-decoration: none;
    border-radius: var(--border-radius-md);
    transition: all var(--transition-fast);
  }

  .header-icon-link:hover {
    color: var(--text-primary);
    background: var(--bg-hover);
  }

  .header-icon-link .icon {
    width: 20px;
    height: 20px;
  }

  /* Slot containers for custom children */
  .header-children-desktop,
  .header-children-mobile,
  .header-children-default {
    display: flex;
    align-items: center;
    gap: var(--space-xs);
  }

  /* Hide empty slots */
  .header-children-desktop:empty,
  .header-children-mobile:empty,
  .header-children-default:empty {
    display: none;
  }

  /* Desktop-only children */
  .header-children-desktop {
    display: flex;
  }

  /* Mobile-only children - hidden by default */
  .header-children-mobile {
    display: none;
  }

  /* Responsive */
  @media (max-width: 768px) {
    /* Hide main header on mobile - MobileHeader provides mobile navigation */
    .site-header {
      display: none;
    }

    .header-container {
      padding: 0 var(--space-md);
      gap: var(--space-sm);
    }

    .header-search {
      max-width: none;
      flex: 1;
    }

    .header-site-title {
      font-size: var(--font-size-md);
    }

    /* Hide dropdowns on mobile */
    .header-dropdown {
      display: none;
    }

    /* Reduce icon size on mobile */
    .header-icon-link {
      width: 32px;
      height: 32px;
    }

    .header-icon-link .icon {
      width: 18px;
      height: 18px;
    }

    /* Show mobile-only children, hide desktop-only */
    .header-children-mobile {
      display: flex;
    }

    .header-children-desktop {
      display: none;
    }
  }

  @media (max-width: 640px) {
    /* On very small screens, hide some icon links */
    .header-icon-links {
      gap: 2px;
    }
  }
</style>

<script>
  // Dropdown toggle functionality
  function initDropdowns() {
    const dropdowns = document.querySelectorAll('.header-dropdown');

    dropdowns.forEach((dropdown) => {
      const button = dropdown.querySelector('.dropdown-button');

      if (!button) return;

      button.addEventListener('click', (e) => {
        e.stopPropagation();

        // Close other dropdowns
        dropdowns.forEach((other) => {
          if (other !== dropdown) {
            other.classList.remove('open');
          }
        });

        // Toggle this dropdown
        dropdown.classList.toggle('open');
      });
    });

    // Close dropdowns when clicking outside
    document.addEventListener('click', () => {
      dropdowns.forEach((dropdown) => {
        dropdown.classList.remove('open');
      });
    });
  }

  // Close header search dropdown when clicking outside
  function initHeaderSearchClose() {
    document.addEventListener('click', (e) => {
      const headerSearch = document.querySelector('.header-search');
      const searchResults = document.querySelector('.search-container--header .pagefind-ui__results');

      if (headerSearch && searchResults && !headerSearch.contains(e.target as Node)) {
        // Clicked outside - could clear the search or just hide results
        // For now, results will auto-hide via the inactive state
      }
    });
  }

  // Initialize on page load
  initDropdowns();
  initHeaderSearchClose();

  // Reinitialize after view transitions
  document.addEventListener('astro:after-swap', () => {
    initDropdowns();
    initHeaderSearchClose();
  });
</script>
