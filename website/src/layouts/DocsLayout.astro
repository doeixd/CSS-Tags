---
import { ViewTransitions, ClientRouter } from "astro:transitions";
import Navigation from "../components/Navigation.astro";
import MobileHeader from "../components/MobileHeader.astro";
import Header from "../components/Header.astro";
import ScrollProgress from "../components/ScrollProgress.astro";
import TableOfContents from "../components/TableOfContents.astro";
import ScrollToTop from "../components/ScrollToTop.astro";
import LoadingIndicator from "../components/LoadingIndicator.astro";
import KeyboardShortcuts from "../components/KeyboardShortcuts.astro";
import { normalizeBase, buildAssetPath, buildHref } from "../utils/url";
import "../theme.css";

interface Props {
    title: string;
    description?: string;
    currentPath: string;
    headings?: { depth: number; slug: string; text: string }[];
}

const { title, description, currentPath, headings = [] } = Astro.props;
const base = normalizeBase(import.meta.env.BASE_URL);

// Filter to only h2 and h3 headings for TOC (and exclude empty headings)
const tocHeadings = headings.filter(
    (h) => h.depth >= 2 && h.depth <= 3 && h.text && h.text.trim().length > 0
);
const hasToc = tocHeadings.length > 0;

// Get theme from cookie for server-side rendering
const themeCookie = Astro.cookies.get("theme");
const theme = themeCookie?.value === "dark" ? "dark" : "light";
---

<!doctype html>
<html
    lang="en"
    class={theme === "dark" ? "dark-mode" : "light-mode"}
    data-theme={theme}
>
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta name="color-scheme" content="dark light" />
        <meta name="generator" content={Astro.generator} />
        <title>{title} | CSS Tags</title>
        <meta
            name="description"
            content={description ||
                "Style HTML directly with modern CSS. No classes, no frameworks—just semantic markup that looks great."}
        />

        <!-- Open Graph / Social -->
        <meta property="og:type" content="website" />
        <meta property="og:title" content={`${title} | CSS Tags`} />
        <meta
            property="og:description"
            content={description || "Style HTML directly with modern CSS"}
        />
        <meta property="og:site_name" content="CSS Tags Documentation" />

        <!-- Twitter -->
        <meta name="twitter:card" content="summary" />
        <meta name="twitter:title" content={`${title} | CSS Tags`} />
        <meta
            name="twitter:description"
            content={description || "Style HTML directly with modern CSS"}
        />

        <link
            rel="icon"
            type="image/svg+xml"
            href={buildAssetPath(base, "favicon.svg")}
        />

        <!-- Theme FOUC prevention for cached/serverless pages -->
        <script is:inline>
            (function () {
                // Validation
                function isValidTheme(value) {
                    return value === "dark" || value === "light";
                }

                function isValidAnimationPreference(value) {
                    return value === "none" || value === "blur-in";
                }

                // Storage read with graceful degradation
                function getStorageValue(key) {
                    // Try localStorage first
                    try {
                        var value = localStorage.getItem(key);
                        if (value !== null) return value;
                    } catch (e) {}

                    // Fall back to reading cookie
                    try {
                        var cookieMatch = document.cookie.match(new RegExp("(?:^|; )" + key + "=([^;]*)"));
                        if (cookieMatch) return cookieMatch[1];
                    } catch (e) {}

                    // Fall back to sessionStorage
                    try {
                        var value = sessionStorage.getItem(key);
                        if (value !== null) return value;
                    } catch (e) {}

                    return null;
                }

                // Get theme with validation
                function getTheme() {
                    var stored = getStorageValue("theme");
                    if (isValidTheme(stored)) {
                        return stored;
                    }

                    // Fall back to system preference
                    try {
                        return window.matchMedia("(prefers-color-scheme: dark)").matches
                            ? "dark"
                            : "light";
                    } catch (e) {
                        return "light"; // Ultimate fallback
                    }
                }

                // Get animation preference
                function getAnimationPreference() {
                    var stored = getStorageValue("animation-preference");
                    if (isValidAnimationPreference(stored)) {
                        return stored;
                    }
                    return "none"; // Default to no animations
                }

                // Apply theme immediately
                var theme = getTheme();
                var animationPref = getAnimationPreference();
                var html = document.documentElement;

                html.classList.remove("dark-mode", "light-mode");
                html.classList.add(theme === "dark" ? "dark-mode" : "light-mode");
                html.setAttribute("data-theme", theme);
                html.setAttribute("data-animation-preference", animationPref);
            })();
        </script>

        <ViewTransitions fallback="none" />
        <style is:global data-astro-transition-persist="theme">
            /* Disable all CSS transitions during theme changes */
            html.theme-transitioning *,
            html.theme-transitioning *::before,
            html.theme-transitioning *::after {
                transition: none !important;
            }

            /* Theme transition: Instant switch for speed */
            html.theme-transitioning ::view-transition-old(root),
            html.theme-transitioning ::view-transition-new(root) {
                animation: none;
                mix-blend-mode: normal;
            }

            ::view-transition-old(root) {
                z-index: 1;
            }

            ::view-transition-new(root) {
                z-index: 2;
            }

            /* Fast fade transition for theme changes */
            html.theme-transitioning::view-transition-old(root) {
                animation: theme-fade-out 0.05s ease-out;
            }

            html.theme-transitioning::view-transition-new(root) {
                animation: theme-fade-in 0.05s ease-in;
            }

            /* Ensure mobile header and theme toggle stay stable (no animation) */
            ::view-transition-old(mobile-header),
            ::view-transition-new(mobile-header),
            ::view-transition-old(theme-toggle),
            ::view-transition-new(theme-toggle) {
                animation: none;
            }

            @keyframes theme-fade-out {
                to {
                    opacity: 0;
                }
            }

            @keyframes theme-fade-in {
                from {
                    opacity: 0;
                }
            }

            * {
                box-sizing: border-box;
                margin: 0;
                padding: 0;
            }

            *:focus-visible {
                outline: var(
                    --focus-outline,
                    var(--outline-width) solid var(--accent)
                );
                outline-offset: var(
                    --focus-outline-offset,
                    var(--outline-offset)
                );
                border-radius: var(
                    --focus-border-radius,
                    var(--border-radius-sm)
                );
            }

            html {
                scroll-behavior: smooth;
            }

            body {
                font-family: "Aptos Display", system-ui, sans-serif;
                color: var(--text-primary);
                background: var(--bg-primary);
                line-height: 1.6;
                overflow-x: hidden;
                min-width: var(--min-mobile-width);
            }

            /* Minimal scrollbars */
            * {
                scrollbar-width: var(--scrollbar-thumb-width);
                scrollbar-color: var(--border-color) transparent;
            }

            *::-webkit-scrollbar {
                width: var(--scrollbar-width);
                height: var(--scrollbar-width);
            }

            *::-webkit-scrollbar-track {
                background: transparent;
            }

            *::-webkit-scrollbar-thumb {
                background: var(--border-color);
                border-radius: var(--border-radius-md);
            }

            *::-webkit-scrollbar-thumb:hover {
                background: var(--text-secondary);
            }

            @media (prefers-color-scheme: dark) {
                * {
                    scrollbar-color: var(--border-color, #333) transparent;
                }

                *::-webkit-scrollbar-thumb {
                    background: var(--border-color, #333);
                }

                *::-webkit-scrollbar-thumb:hover {
                    background: var(--text-secondary, #8b949e);
                }

                a {
                    color: var(--link-color-dark);
                }
            }

            /* Manual dark mode toggle */
            :root.dark-mode a {
                color: var(--link-color-dark);
            }

            /* Reduce motion for users who prefer it */
            @media (prefers-reduced-motion: reduce) {
                *,
                *::before,
                *::after {
                    animation-duration: 0.01ms !important;
                    animation-iteration-count: 1 !important;
                    transition-duration: 0.01ms !important;
                    scroll-behavior: auto !important;
                }
            }

            .skip-to-content {
                position: var(--skip-link-position, absolute);
                top: var(--skip-link-top, -100px);
                left: var(--skip-link-left, var(--space-lg));
                z-index: var(--z-index-skip-link);
                padding: var(
                    --skip-link-padding,
                    var(--space-md) calc(var(--space-lg) * 1.5)
                );
                background: var(--accent);
                color: white;
                text-decoration: none;
                border-radius: var(
                    --skip-link-border-radius,
                    var(--border-radius-md)
                );
                font-weight: var(
                    --skip-link-font-weight,
                    var(--font-weight-medium)
                );
                transition: var(
                    --skip-link-transition,
                    top var(--transition-normal)
                );
            }

            .skip-to-content:focus {
                top: 1rem;
            }

            /* View Transition Animations */
            /* Default: No animations */
            ::view-transition-old(root) {
                animation: none;
            }

            ::view-transition-new(root) {
                animation: none;
            }

            /* Optional: 40ms blur-in animation */
            html[data-animation-preference="blur-in"] ::view-transition-new(root) {
                animation: blur-in 40ms ease-in;
            }

            @keyframes blur-in {
                from {
                    filter: blur(2px);
                    opacity: 0;
                }
                to {
                    filter: blur(0px);
                    opacity: 1;
                }
            }

            /* Keep sidebar stable during transitions */
            ::view-transition-old(sidebar),
            ::view-transition-new(sidebar) {
                animation: none;
                transform: none !important;
                position: sticky !important;
                top: 0 !important;
            }

            /* Keep search stable during transitions */
            ::view-transition-old(search),
            ::view-transition-new(search) {
                animation: none;
                transform: none !important;
                opacity: 1 !important;
            }

            ::view-transition-old(main) {
                animation: none;
            }

            ::view-transition-new(main) {
                animation: none;
            }

            /* Keep header stable during transitions */
            ::view-transition-old(site-header),
            ::view-transition-new(site-header) {
                animation: none;
                transform: none !important;
            }

            /* Header spacing */
            /* Header is fixed on desktop, so page needs top padding to account for header height */
            /* On mobile, Header is hidden and MobileHeader provides navigation (no extra body padding needed) */
            body {
                padding-top: var(--header-height);
            }

            @media (max-width: 768px) {
                body {
                    padding-top: 0;
                }
            }

            .docs-container {
                display: grid;
                min-height: 100vh;
                gap: var(--layout-docs-container-gap, var(--space-2xl));
                position: relative;
            }

            /* Only use 3-column layout on desktop where TOC is visible */
            @media (min-width: 1200px) {
                .docs-container.has-toc {
                    grid-template-columns: var(--sidebar-width) minmax(0, 1fr) var(--toc-width);
                }
            }

            .docs-container.no-toc {
                grid-template-columns: var(--sidebar-width) minmax(0, 1fr);
            }

            .sidebar-resize-handle {
                position: absolute;
                top: 0;
                left: var(--sidebar-width);
                width: var(--resize-handle-width);
                height: 100%;
                cursor: col-resize;
                background: transparent;
                z-index: 10;
                transition: background var(--transition-normal);
            }

            .sidebar-resize-handle:hover,
            .sidebar-resize-handle.resizing {
                background: var(--accent);
            }

            .sidebar-resize-handle::before {
                content: "";
                position: absolute;
                top: 0;
                left: calc(var(--resize-handle-width) * -1);
                width: var(--resize-handle-hit-area);
                height: 100%;
            }

            .content-wrapper {
                max-width: 95ch;
                margin-inline: auto;
                padding: var(
                    --layout-content-wrapper-padding,
                    3rem var(--space-2xl)
                );
                width: 100%;
            }

            .content {
                width: 100%;
            }

            .toc-wrapper {
                padding: var(
                    --layout-toc-wrapper-padding,
                    3rem var(--space-lg) 3rem 0
                );
            }



            @media (max-width: 1200px) {
                .docs-container {
                    grid-template-columns: var(--sidebar-width) 1fr;
                }

                .toc-wrapper {
                    display: none;
                }
            }

            h1 {
                font-size: var(--layout-h1-font-size, var(--font-size-4xl));
                margin-bottom: var(--layout-h1-margin-bottom, var(--space-sm));
                line-height: 1.2;
            }

            h2 {
                font-size: var(--layout-h2-font-size, var(--font-size-3xl));
                margin-top: var(--layout-h2-margin-top, var(--space-2xl));
                margin-bottom: var(--layout-h2-margin-bottom, var(--space-lg));
                padding-top: var(--layout-h2-padding-top, var(--space-lg));
            }

            h2:first-of-type {
                padding-top: 0;
            }

            h3 {
                font-size: var(--layout-h3-font-size, var(--font-size-2xl));
                margin-top: var(--layout-h3-margin-top, var(--font-size-2xl));
                margin-bottom: var(--layout-h3-margin-bottom, var(--space-md));
            }

            h4 {
                font-size: var(--layout-h4-font-size, var(--font-size-xl));
                margin-top: var(--layout-h4-margin-top, var(--font-size-xl));
                margin-bottom: var(--layout-h4-margin-bottom, var(--space-sm));
            }

            p {
                margin-bottom: var(--layout-p-margin-bottom, var(--space-lg));
            }

            a {
                color: var(--link-color-light);
                text-decoration: none;
            }

            a:hover {
                text-decoration: underline;
            }

            /* Inline code styling - Light mode (outside layer for proper priority) */
            code:not(pre code):not(.expressive-code code) {
                background: var(--inline-code-bg-light);
                color: var(--inline-code-color-light);
                border: 1px solid var(--inline-code-border-light);
                padding: var(--inline-code-padding);
                border-radius: var(--inline-code-border-radius);
                font-size: var(--inline-code-font-size);
                font-family:
                    "SF Mono", "Monaco", "Inconsolata", "Roboto Mono", monospace;
            }

            /* Dark mode - system preference */
            @media (prefers-color-scheme: dark) {
                :root:not(.light-mode)
                    code:not(pre code):not(.expressive-code code) {
                    background: var(--inline-code-bg-dark);
                    color: var(--inline-code-color-dark);
                    border: 1px solid var(--inline-code-border-dark);
                }
            }

            /* Dark mode - manual toggle */
            :root.dark-mode code:not(pre code):not(.expressive-code code) {
                background: var(--inline-code-bg-dark);
                color: var(--inline-code-color-dark);
                border: 1px solid var(--inline-code-border-dark);
            }

            /* Header code styling - Light mode */
            h1 code,
            h2 code,
            h3 code,
            h4 code,
            h5 code,
            h6 code {
                background: var(--header-code-bg-light);
                color: var(--header-code-color-light);
                border: 1px solid var(--header-code-border-light);
                padding: var(--header-code-padding);
                border-radius: var(--header-code-border-radius);
                font-size: var(--header-code-font-size);
            }

            /* Header code - Dark mode system preference */
            @media (prefers-color-scheme: dark) {
                :root:not(.light-mode) h1 code,
                :root:not(.light-mode) h2 code,
                :root:not(.light-mode) h3 code,
                :root:not(.light-mode) h4 code,
                :root:not(.light-mode) h5 code,
                :root:not(.light-mode) h6 code {
                    background: var(--header-code-bg-dark);
                    color: var(--header-code-color-dark);
                    border: 1px solid var(--header-code-border-dark);
                }
            }

            /* Header code - Dark mode manual toggle */
            :root.dark-mode h1 code,
            :root.dark-mode h2 code,
            :root.dark-mode h3 code,
            :root.dark-mode h4 code,
            :root.dark-mode h5 code,
            :root.dark-mode h6 code {
                background: var(--header-code-bg-dark);
                color: var(--header-code-color-dark);
                border: 1px solid var(--header-code-border-dark);
            }

            pre {
                background: var(--bg-secondary);
                padding: var(--layout-pre-padding, var(--space-lg));
                border-radius: var(
                    --layout-pre-border-radius,
                    var(--border-radius-lg)
                );
                overflow-x: auto;
                margin-bottom: var(--layout-pre-margin-bottom, var(--space-lg));
            }

            pre code {
                background: none !important;
                padding: 0 !important;
                border: none !important;
                color: inherit !important;
            }

            ul,
            ol {
                margin-bottom: var(
                    --layout-ul-ol-margin-bottom,
                    var(--space-lg)
                );
                padding-left: var(
                    --layout-ul-ol-padding-left,
                    var(--space-2xl)
                );
            }

            li {
                margin-bottom: var(--layout-li-margin-bottom, var(--space-sm));
            }

            blockquote {
                border-left: var(
                    --layout-blockquote-border-left,
                    4px solid var(--accent)
                );
                padding-left: var(
                    --layout-blockquote-padding-left,
                    var(--space-lg)
                );
                margin: var(--layout-blockquote-margin, var(--space-lg) 0);
                color: var(--text-secondary);
            }

            table {
                width: 100%;
                border-collapse: collapse;
                margin-bottom: var(
                    --layout-table-margin-bottom,
                    var(--space-lg)
                );
            }

            th,
            td {
                padding: var(--layout-th-td-padding, var(--space-md));
                border: 1px solid var(--border-color);
                text-align: left;
            }

            th {
                background: var(--bg-secondary);
                font-weight: var(
                    --layout-th-font-weight,
                    var(--font-weight-semibold)
                );
            }

            .description {
                font-size: var(--layout-description-font-size, 1.125rem);
                color: var(--text-secondary);
                margin-bottom: var(
                    --layout-description-margin-bottom,
                    var(--space-2xl)
                );
            }

            /* Prevent content overflow */
            img,
            video,
            iframe {
                max-width: 100%;
                height: auto;
            }

            pre,
            code {
                overflow-wrap: break-word;
                word-wrap: break-word;
            }

            pre code {
                overflow-wrap: normal;
                word-wrap: normal;
            }

            @media (max-width: 768px) {
                .docs-container {
                    grid-template-columns: 1fr;
                }

                .content-wrapper {
                    padding: var(--space-2xl) var(--space-lg);
                    padding-top: var(--mobile-header-height);
                }

                h1 {
                    font-size: var(--font-size-3xl);
                }
            }
        </style>
    </head>
    <body>
        <ClientRouter />

        <!-- Warning for users with JavaScript disabled -->
        <noscript>
            <div
                style="position: fixed; top: 0; left: 0; right: 0; z-index: 10000; background: #d97706; color: white; padding: 1rem; text-align: center; font-weight: 500; box-shadow: 0 2px 8px rgba(0,0,0,0.15);"
            >
                ⚠️ JavaScript is required for interactive features like search,
                navigation, and theme switching. Please enable JavaScript for
                the best experience.
            </div>
        </noscript>

        <a href="#main-content" class="skip-to-content">Skip to content</a>

        <!-- SITE HEADER (OPTIONAL): Full-width header with logo, search, and actions -->
        <!--
            Header provides a full-width header bar across all screen sizes with:
            - Left: Logo image or site title text
            - Center: Search bar with keyboard shortcut (Ctrl/Cmd+K)
            - Right: Icon links (GitHub, Discord, Social), Version/Language dropdowns, Theme toggle

            To ENABLE this option: Uncomment the line below

            EXAMPLE USAGE:
            Basic (just site title):
            <Header currentPath={currentPath} />

            With logo:
            <Header
                currentPath={currentPath}
                logo={{ src: "/logo.svg", alt: "Site Logo" }}
            />

            With icon links:
            <Header
                currentPath={currentPath}
                iconLinks={[
                    { href: "https://github.com/your-repo", icon: "github", label: "GitHub" },
                    { href: "https://discord.gg/your-invite", icon: "discord", label: "Discord" }
                ]}
            />

            With version dropdown:
            <Header
                currentPath={currentPath}
                versionDropdown={{
                    current: "2.0",
                    versions: [
                        { version: "2.0", href: "/v2" },
                        { version: "1.0", href: "/v1" }
                    ]
                }}
            />

            With custom children (slots):
            <Header currentPath={currentPath}>
                {/* Default slot - visible on both desktop and mobile */}
                <button>Custom Button</button>
            </Header>

            With desktop-only children:
            <Header currentPath={currentPath}>
                <Fragment slot="desktop">
                    <a href="/pro">Upgrade to Pro</a>
                </Fragment>
            </Header>

            With mobile-only children:
            <Header currentPath={currentPath}>
                <Fragment slot="mobile">
                    <button aria-label="Menu">☰</button>
                </Fragment>
            </Header>

            With both desktop and mobile children:
            <Header currentPath={currentPath}>
                {/* Shown on both */}
                <span>v2.0</span>

                {/* Desktop only */}
                <Fragment slot="desktop">
                    <a href="/enterprise">Enterprise</a>
                </Fragment>

                {/* Mobile only */}
                <Fragment slot="mobile">
                    <button>Menu</button>
                </Fragment>
            </Header>

            IMPORTANT: When enabled, uncomment the CSS section below (search for "Header spacing")
            to adjust page layout for the fixed header height.
        -->
        <Header
            currentPath={currentPath}
            siteTitle="CSS Tags"
            siteTitleHref={buildHref(base)}
            showSearch={true}
            iconLinks={[
                { href: "https://github.com/doeixd/CSS-Tags", icon: "github", label: "View on GitHub" }
            ]}
        />

        <!-- MOBILE NAVIGATION OPTION 1: Fixed Header with TOC, Search & Menu -->
        <!--
            MobileHeader provides a fixed header bar at the top on mobile with:
            - Left: "On This Page" TOC dropdown button
            - Center: Search button to open search overlay
            - Right: Menu button to open sidebar

            To DISABLE this option: Comment out the line below
            Note: If you disable this, enable the standalone button in Navigation.astro

            CUSTOMIZATION:
            The sidebar will duck under the mobile header automatically via:
            --nav-sidebar-mobile-padding-top in theme.css (default: var(--mobile-header-height))
            Set to 0 if using standalone button instead of this component.
        -->
        <MobileHeader headings={headings} />

        <ScrollProgress />
        <LoadingIndicator />
        <KeyboardShortcuts />
        <div class={`docs-container ${hasToc ? 'has-toc' : 'no-toc'}`}>
            <div transition:persist="sidebar">
                <Navigation currentPath={currentPath} />
            </div>
            <div class="sidebar-resize-handle"></div>
            <div class="content-wrapper">
                <main class="content" id="main-content" data-pagefind-body>
                    <slot />
                </main>
            </div>
            {hasToc && (
                <div class="toc-wrapper">
                    <TableOfContents headings={headings} />
                </div>
            )}
        </div>

        <script>
            function setupSidebarResize() {
                const handle = document.querySelector(".sidebar-resize-handle");
                const container = document.querySelector(".docs-container");
                if (!handle || !container) return;

                let isResizing = false;
                let startX = 0;
                let startWidth = parseInt(
                    getComputedStyle(document.documentElement).getPropertyValue(
                        "--sidebar-width",
                    ) || "280",
                );

                // Load saved width from localStorage
                const savedWidth = localStorage.getItem("sidebar-width");
                if (savedWidth) {
                    document.documentElement.style.setProperty(
                        "--sidebar-width",
                        savedWidth + "px",
                    );
                }

                handle.addEventListener("mousedown", (e) => {
                    isResizing = true;
                    startX = e.clientX;
                    startWidth = parseInt(
                        getComputedStyle(
                            document.documentElement,
                        ).getPropertyValue("--sidebar-width") || "280",
                    );
                    handle.classList.add("resizing");
                    document.body.style.userSelect = "none";
                    document.body.style.cursor = "col-resize";
                });

                document.addEventListener("mousemove", (e) => {
                    if (!isResizing) return;

                    const delta = e.clientX - startX;
                    const newWidth = Math.max(
                        200,
                        Math.min(600, startWidth + delta),
                    );
                    document.documentElement.style.setProperty(
                        "--sidebar-width",
                        newWidth + "px",
                    );
                });

                document.addEventListener("mouseup", () => {
                    if (isResizing) {
                        isResizing = false;
                        handle.classList.remove("resizing");
                        document.body.style.userSelect = "";
                        document.body.style.cursor = "";

                        // Save width to localStorage
                        const currentWidth = getComputedStyle(
                            document.documentElement,
                        ).getPropertyValue("--sidebar-width");
                        localStorage.setItem(
                            "sidebar-width",
                            parseInt(currentWidth),
                        );
                    }
                });
            }

            document.addEventListener("DOMContentLoaded", setupSidebarResize);
            document.addEventListener("astro:after-swap", setupSidebarResize);
        </script>
    </body>
</html>
